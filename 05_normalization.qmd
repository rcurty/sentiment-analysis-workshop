---
title: "Normalization & Noise Reduction"
---

Now that we‚Äôre familiar with the dataset and have briefly discussed the essential preprocessing steps, let‚Äôs take a deeper dive into the normalization process.

As we've seen, the main goal of normalization is to remove irrelevant punctuation and content, and to standardize the data in order to reduce noise. Below are some key actions we‚Äôll be performing during this workshop:

| Action                       | Why it matters?                                                                                                                                                                                                                                                                                                                                                         |
|----------------|-----------------------------------------------------------|
| Remove URLs                  | URLs often contain irrelevant noise and don't contribute meaningful content for analysis.                                                                                                                                                                                                                                                                               |
| Remove Punctuation & Symbols | Punctuation marks and other symbols including those extensively used in social media for mentioning (\@) or tagging (#) rarely adds value in most NLP tasks and can interfere with tokenization (as we further episodes) or word matching.                                                                                                                              |
| Remove Numbers               | Numbers can be noise in most contexts unless specifically relevant (e.g., in financial or medical texts) don't contribute much to the analysis. However, in NLP tasks they are considered important, there might be considerations to replace them with dummy tokens (e.g. \<NUMBER\>), or even converting them into their written form (e.g, 100 becomes one hundred). |
| Normalize Whitespaces        | Ensures consistent word boundaries and avoids issues during tokenization or frequency analysis.                                                                                                                                                                                                                                                                         |
| Convert to Lowercase         | Prevents case sensitivity from splitting word counts due to case variations (e.g., ‚ÄúAppleTV‚Äù ‚â† "APPLETV" ‚â† ‚ÄúappleTV‚Äù ‚â† ‚Äúappletv‚Äù), improving model consistency.                                                                                                                                                                                                         |
| Convert Emojis to Text       | Emojis play a unique role in text analysis, as they often convey sentiment. Rather than removing them, we will convert them into their corresponding text descriptions.                                                                                                                                                                                                 |

<div>

## üèãÔ∏èExcercise

In pairs or groups of three, identify the techniques you would consider using to normalize and reduce noise in the following sentence.

"OMG!! üò± I can't believe it... This is CRAZY!!! #unreal ü§Ø"

<div>

How many techniques could you identify?

<div>

Bingo if you got all five!

Here is an example how the final text would look like:

omg \[face scream in fear\] I can not believe it this is crazy unreal \[exploding head\]

</div>

</div>

</div>

A caveat when working with emojis is that they are figurative and highly contextual. Also, there may be important generational and cultural variability in how people interpret them. For example, some countries may use the Folded Hands Emoji (üôè) as a sign of thank you where others may seem as religious expression. Also, some may use it in a more positive way as gratitude, hope or respect, or in a negative context, where they might be demonstrating submission or begging.

You might have noticed based on the example above that emojis are converted to their equivalent CLDR (common, human-readable name) based on this [emoji unicode list](https://www.unicode.org/emoji/charts/full-emoji-list.html), which are not as nuanced and always helpful to detect sentiment. While not always perfect, that is a required step to normalize the data.

Let's go back to the worksheet to get our hands "dirty" with some cleaning and normalization. For this part of the lesson, we'll use the (FIXME: **`tidyverse`** and **`stringr)`** packages to clean and transform the data, helping us make it more normalized, consistent, and ready for analysis. We'll be also using the (FIXME: `emoji)` package.

## Expanding Contractions

Another important step is to properly handle contractions. In everyday language, we often shorten words: *can‚Äôt*, *don‚Äôt*, *it‚Äôs*. These make speech and writing flow more easily, but they can cause confusion for Natural Language Processing (NLP) models. Expanding contractions, such as changing *can‚Äôt* to *cannot* or *it‚Äôs* to *it is*, helps bring clarity and consistency to the text because NLP models treat *don‚Äôt* and *do not* as completely different words, even though they mean the same thing. Also, words like *cant*, *doesnt*, and *whats* lose their meaning. Expanding contractions reduces this inconsistency and ensures that both forms are recognized as the same concept. Expanding it to *is not happy* makes the negative sentiment explicit, which is especially important in tasks like sentiment analysis.

So, while it may seem like a small step, it often leads to cleaner data, leaner models, and more accurate results. First, however, we need to ensure that apostrophes are handled correctly. It's not uncommon to encounter messy text where nonstandard characters are used in place of the straight apostrophe ('). Such inconsistencies are very common and can disrupt contraction expansion.

| Character | Unicode | Notes                                                   |
|-------------|-------------|----------------------------------------------|
| `'`       | U+0027  | Standard straight apostrophe, used in most dictionaries |
| `‚Äô`       | U+2019  | Right single quotation mark (curly apostrophe)          |
| `‚Äò`       | U+2018  | Left single quotation mark                              |
| ` º`       | U+02BC  | Modifier letter apostrophe                              |
| `` ` ``   | U+0060  | Grave accent (sometimes typed by mistake)               |

Let's go back to our Quarto document to perform some data cleaning and normalization.

::: callout-note
## üìë Suggested Readings

Bai, Q., Dan, Q., Mu, Z., & Yang, M. (2019). A systematic review of emoji: Current research and future perspectives. *Frontiers in psychology*, *10*, <https://doi.org/10.3389/fpsyg.2019.02221>

Graham, P. V. (2024). Emojis: An Approach to Interpretation. *UC L. SF Commc'n and Ent. J.*, *46*, 123. <https://repository.uclawsf.edu/cgi/viewcontent.cgi?article=1850&context=hastings_comm_ent_law_journal>
:::
